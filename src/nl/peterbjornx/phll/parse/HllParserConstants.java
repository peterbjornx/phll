/* Generated By:JavaCC: Do not edit this line. HllParserConstants.java */
package nl.peterbjornx.phll.parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HllParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 5;
  /** RegularExpression Id. */
  int PLUS = 6;
  /** RegularExpression Id. */
  int MINUS = 7;
  /** RegularExpression Id. */
  int TIMES = 8;
  /** RegularExpression Id. */
  int DIVIDE = 9;
  /** RegularExpression Id. */
  int ASSIGN = 10;
  /** RegularExpression Id. */
  int ADD_ASSIGN = 11;
  /** RegularExpression Id. */
  int SUB_ASSIGN = 12;
  /** RegularExpression Id. */
  int MUL_ASSIGN = 13;
  /** RegularExpression Id. */
  int DIV_ASSIGN = 14;
  /** RegularExpression Id. */
  int MOD_ASSIGN = 15;
  /** RegularExpression Id. */
  int AND_ASSIGN = 16;
  /** RegularExpression Id. */
  int XOR_ASSIGN = 17;
  /** RegularExpression Id. */
  int OR_ASSIGN = 18;
  /** RegularExpression Id. */
  int SHL_ASSIGN = 19;
  /** RegularExpression Id. */
  int SHR_ASSIGN = 20;
  /** RegularExpression Id. */
  int INC = 21;
  /** RegularExpression Id. */
  int DEC = 22;
  /** RegularExpression Id. */
  int MODULUS = 23;
  /** RegularExpression Id. */
  int ORL = 24;
  /** RegularExpression Id. */
  int ANL = 25;
  /** RegularExpression Id. */
  int XOR = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int INV = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int NOT = 30;
  /** RegularExpression Id. */
  int SEMIC = 31;
  /** RegularExpression Id. */
  int LPAR = 32;
  /** RegularExpression Id. */
  int RPAR = 33;
  /** RegularExpression Id. */
  int LBRAC = 34;
  /** RegularExpression Id. */
  int RBRAC = 35;
  /** RegularExpression Id. */
  int LSQB = 36;
  /** RegularExpression Id. */
  int RSQB = 37;
  /** RegularExpression Id. */
  int RSH = 38;
  /** RegularExpression Id. */
  int LSH = 39;
  /** RegularExpression Id. */
  int LT = 40;
  /** RegularExpression Id. */
  int GT = 41;
  /** RegularExpression Id. */
  int LEQ = 42;
  /** RegularExpression Id. */
  int GEQ = 43;
  /** RegularExpression Id. */
  int EQ = 44;
  /** RegularExpression Id. */
  int NEQ = 45;
  /** RegularExpression Id. */
  int NUMBER = 46;
  /** RegularExpression Id. */
  int UINT32 = 47;
  /** RegularExpression Id. */
  int SINT32 = 48;
  /** RegularExpression Id. */
  int UINT16 = 49;
  /** RegularExpression Id. */
  int SINT16 = 50;
  /** RegularExpression Id. */
  int UINT8 = 51;
  /** RegularExpression Id. */
  int SINT8 = 52;
  /** RegularExpression Id. */
  int NAME = 53;
  /** RegularExpression Id. */
  int COMMA = 54;
  /** RegularExpression Id. */
  int COLON = 55;
  /** RegularExpression Id. */
  int TERN = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<EOL>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"&=\"",
    "\"^=\"",
    "\"|=\"",
    "\"<<=\"",
    "\">>=\"",
    "\"++\"",
    "\"--\"",
    "\"%\"",
    "\"||\"",
    "\"&&\"",
    "\"^\"",
    "\"|\"",
    "\"~\"",
    "\"&\"",
    "\"!\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\">>\"",
    "\"<<\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "<NUMBER>",
    "\"uint32_t\"",
    "\"int32_t\"",
    "\"uint16_t\"",
    "\"int16_t\"",
    "\"uint8_t\"",
    "\"int8_t\"",
    "<NAME>",
    "\",\"",
    "\":\"",
    "\"?\"",
  };

}
